---
swagger: "2.0"
info:
  x-ibm-name: "customer"
  title: "customer"
  version: "1.0.0"
schemes:
- "https"
host: "$(catalog.host)"
basePath: "/api"
consumes:
- "application/json"
produces:
- "application/json"
securityDefinitions:
  apic-oauth-provider:
    type: "oauth2"
    description: ""
    flow: "implicit"
    authorizationUrl: "https://api.us.apiconnect.ibmcloud.com/centusibmcom-cloudnative-dev/bluecompute/oauth20/authorize"
    scopes:
      blue: "bluecompute scope"
  clientIdHeader:
    type: "apiKey"
    in: "header"
    name: "X-IBM-Client-Id"
security:
- clientIdHeader: []
  apic-oauth-provider:
  - "blue"
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
    - set-variable:
        title: "set-variable"
        actions:
        - set: "service-name"
          value: "$(MICROSERVICE_NAME)"
        - set: "bluecompute.iss.claim"
          value: "apic"
        - set: "hs256-key"
          value: "{ \"alg\": \"HS256\",   \"kty\": \"oct\",   \"use\": \"sig\",  \
            \ \"k\": \"VOKJrRJ4UuKbioNd6nIHXCpYkHhxw6-0Im-AupSk9ATvUwF8wwWzLWKQZOMbke-Swo79eca4_QgCZNY0iYAKLgDfWf4lfZ9MmiAkJMVfEWt9pp9r7ycQT8WhkMtPVNULlvOI4RbhBq1dxQkY4A6-h_lVIFbxGF6uHo8KpmwM1jAWxRvKYYu0VbTYOBjQWuakS7dIq11_6maRoAEaLNWjigMKlQSeCP6kVKnpoEDxy1Rqw9sV4ttJjFDrqZRcwwIvNhqVc-eq1Ed-Uzev-HQVMTCDuHs8m0wPRNQYHP6M0fJNRae6tkhvxKEFwZKbco7om6F3VPE-xRyOT_HkpAU9HA\"\
            \ }"
        version: "1.0.0"
    - jwt-generate:
        title: "jwt-generate"
        iss-claim: "bluecompute.iss.claim"
        exp-claim: 3600
        version: "1.0.0"
        jwt: "jwttoken"
        jws-jwk: "hs256-key"
        jwe-enc: "A128CBC-HS256"
        jwe-alg: "A256KW"
    - gatewayscript:
        title: "gateway-script"
        version: "1.0.0"
        source: "var path = apim.getvariable('request.path');\nvar service = apim.getvariable('service-name')\n\
          \n// translate path\nvar realpath = path.replace('/api', '/' + service +\
          \ '/micro');\napim.setvariable('real-path', realpath);\n\n// set JWT token\n\
          apim.setvariable('message.headers.authorization', 'Bearer ' + apim.getvariable('jwttoken')); "
    - invoke:
        target-url: "$(TARGET_HOST)$(real-path)"
    catch: []
  phase: "realized"
  properties:
    MICROSERVICE_NAME:
      value: "customer-microservice"
      description: ""
      encoded: false
    TARGET_HOST:
      value: "https://us-netflix-zuul-jkwong-dev.mybluemix.net"
      description: ""
      encoded: false
paths:
  /customer/{id}:
    get:
      responses:
        200:
          description: "200 OK"
          schema:
            $ref: "#/definitions/customerObj"
    parameters:
    - name: "id"
      type: "string"
      required: true
      in: "path"
    put:
      responses:
        200:
          description: "200 OK"
      parameters:
      - name: "customerObj"
        required: true
        in: "body"
        schema:
          $ref: "#/definitions/customerObj"
  /customer:
    get:
      responses:
        200:
          description: "200 OK"
          schema:
            $ref: "#/definitions/customerObj_array"
definitions:
  customerObj_array:
    type: "array"
    items:
      $ref: "#/definitions/customerObj"
  customerObj:
    properties:
      imageUrl:
        type: "string"
      lastName:
        type: "string"
      firstName:
        type: "string"
      password:
        type: "string"
      username:
        type: "string"
      customerId:
        type: "string"
    additionalProperties: false
tags: []
